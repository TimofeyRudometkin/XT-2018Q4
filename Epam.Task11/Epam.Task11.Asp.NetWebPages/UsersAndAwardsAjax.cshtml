@using Epam.Task11.UsersAndAwards.Common;
@using Epam.Task11.UsersAndAwards.ConsolePL;
@using Epam.Task11.UsersAndAwards.Entities;
@using Epam.Task11.UsersAndAwards.BLL.Interface;

@if (IsAjax)
{
    var _userLogic = DependencyResolver.UserLogic;
    var _awardLogic = DependencyResolver.AwardLogic;
    var _siteUserLogic = DependencyResolver.SiteUserLogic;
    var _userId = Request.Params["userId"];
    var _nameUser = Request.Params["userName"];
    string _dateString = Request.Params["userDateOfBirth"];
    var _awardId = Request.Params["awardId"];
    var _awardTitle = Request.Params["awardTitle"];
    var _actionPlan = Request.Params["actionPlan"];
    var _arrayIndexOfUsers = Request.Params["listIndexOfUsers"].Split(' ');
    var _confirmationForRemoval = Request.Params["confirmationForRemoval"];
    var _file = Request.Params["file"];

    switch (_actionPlan)
    {
        case "addUserForm":
            var _date = _dateString.Split('-');
            Program.AddUser(_userLogic, _nameUser, int.Parse(_date[2]), int.Parse(_date[1]), int.Parse(_date[0]));
            <p>@($"User { _nameUser} with data of birth { int.Parse(_date[2])} { int.Parse(_date[1])} { int.Parse(_date[0])} added.")</p>
            break;
        case "deleteUserForm":
            Program.DeleteUser(_userLogic, int.Parse(_userId));
            <p>@(($"User with id - { int.Parse(_userId)} was deleated."))</p>
            break;
        case "deleteSiteUserByNameForm":
            Program.DeleteSiteUser(_siteUserLogic, _nameUser);
            <p>@(($"User '{_nameUser}' was deleated."))</p>
            break;
        case "updateUserForm":
            var _date2 = _dateString.Split('-');
            Program.UpdateUser(_userLogic, _nameUser, int.Parse(_date2[2]), int.Parse(_date2[1]), int.Parse(_date2[0]), int.Parse(_userId));
            <p>@(($"User data with id - { int.Parse(_userId)} was updated."))</p>
            break;
        case "showUsersForm":
            foreach (var user in _userLogic.GetAll())
            {
                <p>@($"User '{user.Name} with id '{user.Id}' date of birth '{user.DateOfBirthday.ToShortDateString()}' {user.Age} years old.")</p>

                if (File.Exists($"{AppDomain.CurrentDomain.BaseDirectory}\\Content\\User {user.Id}.jpg"))
                {
                    <img src="@($"~/Content/User {user.Id}.jpg")" width="100" height="100" alt="image of user">
                }
                else
                {
                    <img src="@("~/Content/User.jpg")" width="100" height="100" alt="image of user">
                }
            }
            break;
        case "showAllUsersForm":
            foreach (var user in _userLogic.GetAll())
            {
                <p>@($"User '{user.Name} with id '{user.Id}' date of birth '{user.DateOfBirthday.ToShortDateString()}' {user.Age} years old.")</p>
                if (File.Exists($"{AppDomain.CurrentDomain.BaseDirectory}\\Content\\User {user.Id}.jpg"))
                {
                    <img src="@($"~/Content/User {user.Id}.jpg")" width="100" height="100" alt="image of user">
                }
                else
                {
                    <img src="@("~/Content/User.jpg")" width="100" height="100" alt="image of user">
                }
                int[] listOfAwards = Program.GetAwardsIdByUserId(_userLogic, user.Id);
                if (listOfAwards != null)
                {
                    <p>@("     Has the following awards:")</p>
                    bool checkNew1 = true;
                    string _listOfAwards1 = "";
                    foreach (int awardId in listOfAwards)
                    {
                        if (checkNew1)
                        {
                            checkNew1 = false;
                        }
                        else
                        {
                            _listOfAwards1 += ", ";
                        }
                        Award award = new Award();
                        award = Program.GetAwardById(_awardLogic, awardId);
                        _listOfAwards1 += $"award '{award.Title}' with id {award.Id}";
                    }
                    if (_listOfAwards1 != "")
                    {
                        <p>@(_listOfAwards1).</p>
                    }
                }
            }
            foreach (var siteUsers in _siteUserLogic.GetAll())
            {
                <p>@($"Site User '{siteUsers.Name}' years old.")</p>
                if (File.Exists($"{AppDomain.CurrentDomain.BaseDirectory}\\Content\\User {siteUsers.Name}.jpg"))
                {
                    <img src="@($"~/Content/SiteUser {siteUsers.Name}.jpg")" width="100" height="100" alt="image of user">
                }
                else
                {
                    <img src="@("~/Content/SiteUser.jpg")" width="100" height="100" alt="image of user">
                }
                if (siteUsers.AwardId != null)
                {
                    int[] listOfAwards = siteUsers.AwardId;
                    bool checkNew1 = true;
                    string _listOfAwards1 = "";
                    foreach (int awardId in listOfAwards)
                    {
                        if (checkNew1)
                        {
                            checkNew1 = false;
                            <p>@("     Has the following awards:")</p>
                        }
                        else
                        {
                            _listOfAwards1 += ", ";
                        }
                        Award award = new Award();
                        award = Program.GetAwardById(_awardLogic, awardId);
                        _listOfAwards1 += $"award '{award.Title}' with id {award.Id}";
                    }
                    if (_listOfAwards1 != "")
                    {
                        <p>@(_listOfAwards1).</p>
                    }
                }
            }
            break;
        case "showAllUsersAdminForm":
            foreach (var user in _userLogic.GetAll())
            {
                <p>@($"User '{user.Name} with id '{user.Id}' date of birth '{user.DateOfBirthday.ToShortDateString()}' {user.Age} years old.")</p>
                if (File.Exists($"{AppDomain.CurrentDomain.BaseDirectory}\\Content\\User {user.Id}.jpg"))
                {
                    <img src="@($"~/Content/User {user.Id}.jpg")" width="100" height="100" alt="image of user">
                }
                else
                {
                    <img src="@("~/Content/User.jpg")" width="100" height="100" alt="image of user">
                }
                int[] listOfAwards = Program.GetAwardsIdByUserId(_userLogic, user.Id);
                if (listOfAwards != null)
                {
                    <p>@("     Has the following awards:")</p>
                    bool checkNew1 = true;
                    string _listOfAwards1 = "";
                    foreach (int awardId in listOfAwards)
                    {
                        if (checkNew1)
                        {
                            checkNew1 = false;
                        }
                        else
                        {
                            _listOfAwards1 += ", ";
                        }
                        Award award = new Award();
                        award = Program.GetAwardById(_awardLogic, awardId);
                        _listOfAwards1 += $"award '{award.Title}' with id {award.Id}";
                    }
                    <p>@(_listOfAwards1).</p>
                }
            }
            foreach (var siteUsers in _siteUserLogic.GetAll())
            {
                <p>@(siteUsers.ToStringAdmin())</p>
                if (File.Exists($"{AppDomain.CurrentDomain.BaseDirectory}\\Content\\User {siteUsers.Name}.jpg"))
                {
                    <img src="@($"~/Content/SiteUser {siteUsers.Name}.jpg")" width="100" height="100" alt="image of user">
                }
                else
                {
                    <img src="@("~/Content/SiteUser.jpg")" width="100" height="100" alt="image of user">
                }
                if (siteUsers.AwardId != null)
                {
                    int[] listOfAwards = siteUsers.AwardId;
                    <p>@("     Has the following awards:")</p>
                    bool checkNew1 = true;
                    string _listOfAwards1 = "";
                    foreach (int awardId in listOfAwards)
                    {
                        if (checkNew1)
                        {
                            checkNew1 = false;
                        }
                        else
                        {
                            _listOfAwards1 += ", ";
                        }
                        Award award = new Award();
                        award = Program.GetAwardById(_awardLogic, awardId);
                        _listOfAwards1 += $"award '{award.Title}' with id {award.Id}";
                    }
                    if (_listOfAwards1 != "")
                    {
                        <p>@(_listOfAwards1).</p>
                    }
                }
            }
            break;
        case "addAwardForm":
            Program.AddAward(_awardLogic, _awardTitle);
            <p>@($"Award { _awardTitle} added.")</p>
            break;
        case "deleteAwardForm":

            if (_confirmationForRemoval == "true")
            {
                foreach (var usersId in _arrayIndexOfUsers)
                {
                    if (Program.ToRemoveUserReward(_userLogic, int.Parse(usersId), int.Parse(_awardId)))
                    {
                        <p>@($"Award with id - '{ _awardId}' deleted from list of user with id '{usersId}'.")</p>
                    }
                }
                Program.DeleteAward(_awardLogic, int.Parse(_awardId));
                <p>@($"Award with id - '{ _awardId}' deleted.")</p>
            }
            else
            {
                string _listOfUsersId1 = "";
                foreach (var user in _userLogic.GetAll())
                {
                    int[] listOfAwards = Program.GetAwardsIdByUserId(_userLogic, user.Id);
                    if (listOfAwards != null)
                    {
                        for (int i = 0; i < listOfAwards.Length; i++)
                        {
                            if (listOfAwards[i].ToString() == _awardId)
                            {
                                _listOfUsersId1 += $" {user.Id}";
                                break;
                            }
                        }
                    }
                }
                if (_listOfUsersId1 == "")
                {
                    Program.DeleteAward(_awardLogic, int.Parse(_awardId));
                    <p>@($"Award with id - '{ _awardId}' deleted.")</p>
                }
                else
                {
                    <p>To remove the award from the award list and custom lists? @_awardId@(_listOfUsersId1)</p>
                }
            }
            break;
        case "updateAwardForm":
            Program.UpdateAward(_awardLogic, _awardTitle, int.Parse(_awardId));
            <p>@($"Award with id - '{ _awardTitle}' renamed.")</p>
            break;
        case "showAwardsForm":
            foreach (Award award in _awardLogic.GetAllAwards())
            {
                <p>@($"Award '{award.Title}' with id '{award.Id}'{Environment.NewLine}")</p>
            }
            break;
        case "getAwardByIdForm":
            var _award = Program.GetAwardById(_awardLogic, int.Parse(_awardId));
            <p>@($"Under id - {_award.Id} - reward  '{_award.Title}'.")</p>
            break;
        case "getAwardsIdByUsersIdForm":
            var _arrayOfAwards = Program.GetAwardsIdByUserId(_userLogic, int.Parse(_userId));
            bool checkNew2 = true;
            string _listOfAwards2 = "";
            foreach (int element in _arrayOfAwards)
            {
                if (checkNew2)
                {
                    checkNew2 = false;
                }
                else
                {
                    _listOfAwards2 += ", ";
                }
                _listOfAwards2 += element;
            }
            <p>@($"User with id - '{_userId}' has a reward with id :'{_listOfAwards2}'.")</p>
            break;
        case "toAwardUserForm":
            Program.ToAwardUser(_userLogic, int.Parse(_userId), int.Parse(_awardId));
            <p>@($"The user with id - '{_userId}' is awarded the award with id - '{_awardId}'.")</p>
            break;
        case "toAwardSiteUserForm":
            Program.ToAwardSiteUser(_siteUserLogic, _nameUser, int.Parse(_awardId));
            <p>@($"The user '{_nameUser}' is awarded the award with id - '{_awardId}'.")</p>
            break;
        case "toRemoveUserRewardForm":
            Program.ToRemoveUserReward(_userLogic, int.Parse(_userId), int.Parse(_awardId));
            <p>@($"The user with id '{_userId}' was taken the award with id '{_awardId}'.")</p>
            break;
        case "toRemoveSiteUserRewardForm":
            Program.ToRemoveSiteUserReward(_siteUserLogic, _nameUser, int.Parse(_awardId));
            <p>@($"The site user '{_nameUser}' was taken the award with id '{_awardId}'.")</p>
            break;
        case "addImageToUserByIdForm":
            if (Program.AddImage(_userLogic, int.Parse(_userId), _file))
            {
                <p>@($"The image added to the user with id - '{_userId}'.")</p>
            }
            else
            {
                <p>@($"The image is not added to the user with id - '{_userId}'.")</p>
            }
            break;
        case "addImageToSiteUserByNameForm":
            if (Program.AddImageToSiteUser(_siteUserLogic, _nameUser, _file))
            {
                <p>@($"The image added to the site user with id - '{_nameUser}'.")</p>
            }
            else
            {
                <p>@($"The image is not added to the site user with id - '{_nameUser}'.")</p>
            }
            break;
        case "correctionOfAccessPermissionForm":
            bool changeAccessPermission = Program.CorrectionOfAccessPermission(_siteUserLogic, _nameUser, bool.Parse(_awardTitle));
            if (changeAccessPermission)
            {
                <p>@($"The site user '{_nameUser}' now is '{(_awardTitle == "true" ? "Admin" : "User")}'.")</p>
            }
            break;
        default:
            break;
    }

    return;
}